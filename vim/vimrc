set t_Co=256
set synmaxcol=130
set colorcolumn=121
set list
set hidden
set nobackup
set noswapfile
set number
set ruler
" allow folder specific vimrc files
set exrc
set go=ac "wywal menu z obrazkami
set timeoutlen=500
set mouse=a
set grepprg=ack\ -a
set shiftwidth=2
set softtabstop=2
set expandtab
set tabstop=2
set backspace=indent,eol,start
set ignorecase
set smartcase
set scrolloff=3
set hlsearch
set incsearch " ...dynamically as they are typed.
set ls=2 " alsways show status line
set encoding=utf8

" you can also toggle through the matches by tab
set wildmode=list:longest,full

syntax on
if has("autocmd")
filetype indent on
endif

map <C-h> :bnext<CR>
map <C-l> :bNext<CR>
map <C-c> :bdelete<CR>

" Shortcut to rapidly toggle `set list`
"nmap <leader>l :set list!<CR>
noremap <C-t> :CommandT<CR>
noremap <leader>n :NERDTreeToggle<CR>

" compress empty lines and remove empty spaces at the end of line
noremap <silent> <leader>l :%s/\s\+$//e<CR>:g/^$/,/./-j<CR>:nohl<CR>``

call pathogen#infect()

colorscheme railscasts2_hack
" % to bounce from do to end etc.
runtime! macros/matchit.vim

" Use the same symbols as TextMate for tabstops and EOLs
set statusline=%F%m%r%h%w(%Y)\ %{fugitive#statusline()}%=[%04v,%l\/%L]\ %p%%
set listchars=tab:▸\ ,eol:¬
"set listchars=eol:.
"[%03.3b\|%02.2B] <- show ascii|hex
"highlight OverLength ctermbg=red ctermfg=white guibg=#592929
"match OverLength /\%121v.\+/

"let w:m1=matchadd('Search', '\%<121v.\%>116v', -1)
"let w:m2=matchadd('ErrorMsg', '\%>120v.\+', -1)
"au BufWinEnter * let w:m1=matchadd('Search', '\%<121v.\%>116v', -1)
"au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>120v.\+', -1)

" custom colors for Indent Guides plugin
let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=#030303 ctermbg=236
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=#020202 ctermbg=232
